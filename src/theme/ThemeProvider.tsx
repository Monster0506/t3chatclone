'use client';

import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';

export type Theme = {
  name: string;
  buttonBg: string;
  buttonText: string;
  buttonHover: string;
  buttonGlass: string;
  buttonBorder: string;
  inputBg: string;
  inputText: string;
  inputFocus: string;
  inputGlass: string;
  inputBorder: string;
  background: string;
  foreground: string;
  glass: string;
};

const themes: Theme[] = [
    {
      name: 'Daybreak Dew',
      buttonBg: 'bg-gradient-to-r from-pink-400 to-purple-400',
      buttonText: 'text-black',
      buttonHover: 'hover:from-pink-500 hover:to-purple-500',
      buttonGlass: 'rgba(255,255,255,0.7)',
      buttonBorder: 'rgba(200,150,255,0.3)',
      inputBg: 'bg-white',
      inputText: 'text-purple-900',
      inputFocus: 'focus:ring-pink-400',
      inputGlass: 'rgba(255,255,255,0.6)',
      inputBorder: 'rgba(200,150,255,0.3)',
      background: 'linear-gradient(135deg, #f8fafc 0%, #fbeffb 100%)',
      foreground: '#2d0036',
      glass: 'rgba(255,255,255,0.5)',
    },
    {
      name: 'Twilight Abyss',
      buttonBg: 'bg-gradient-to-r from-gray-900 to-purple-900',
      buttonText: 'text-white',
      buttonHover: 'hover:from-gray-800 hover:to-purple-800',
      buttonGlass: 'rgba(30,20,60,0.7)',
      buttonBorder: 'rgba(100,80,200,0.3)',
      inputBg: 'bg-gray-900',
      inputText: 'text-purple-100',
      inputFocus: 'focus:ring-purple-700',
      inputGlass: 'rgba(30,20,60,0.6)',
      inputBorder: 'rgba(100,80,200,0.3)',
      background: 'linear-gradient(135deg, #18122b 0%, #2d0036 100%)',
      foreground: '#fbeffb',
      glass: 'rgba(30,20,60,0.5)',
    },
    {
      name: 'Northern Lights',
      buttonBg: 'bg-gradient-to-r from-green-400 to-blue-400',
      buttonText: 'text-blue-900',
      buttonHover: 'hover:from-green-500 hover:to-blue-500',
      buttonGlass: 'rgba(200,255,255,0.7)',
      buttonBorder: 'rgba(100,255,200,0.3)',
      inputBg: 'bg-blue-50',
      inputText: 'text-blue-900',
      inputFocus: 'focus:ring-green-400',
      inputGlass: 'rgba(200,255,255,0.6)',
      inputBorder: 'rgba(100,255,200,0.3)',
      background: 'linear-gradient(135deg, #e0fff7 0%, #c7d2fe 100%)',
      foreground: '#0a2a2a',
      glass: 'rgba(200,255,255,0.5)',
    },
    {
      name: 'Cherry Blossom',
      buttonBg: 'bg-gradient-to-r from-pink-300 to-red-300',
      buttonText: 'text-red-900',
      buttonHover: 'hover:from-pink-400 hover:to-red-400',
      buttonGlass: 'rgba(255,220,230,0.7)',
      buttonBorder: 'rgba(255,150,200,0.3)',
      inputBg: 'bg-pink-50',
      inputText: 'text-red-900',
      inputFocus: 'focus:ring-pink-300',
      inputGlass: 'rgba(255,220,230,0.6)',
      inputBorder: 'rgba(255,150,200,0.3)',
      background: 'linear-gradient(135deg, #fff0f6 0%, #ffe0e9 100%)',
      foreground: '#7a0036',
      glass: 'rgba(255,220,230,0.5)',
    },
    {
      name: 'Electric Dream',
      buttonBg: 'bg-gradient-to-r from-cyan-400 to-fuchsia-400',
      buttonText: 'text-black',
      buttonHover: 'hover:from-cyan-500 hover:to-fuchsia-500',
      buttonGlass: 'rgba(205, 255, 200, 0.8)',
      buttonBorder: 'rgba(255,0,255,0.3)',
      inputBg: 'bg-fuchsia-50',
      inputText: 'text-fuchsia-900',
      inputFocus: 'focus:ring-cyan-400',
      inputGlass: 'rgba(255,200,255,0.6)',
      inputBorder: 'rgba(255,0,255,0.3)',
      background: 'linear-gradient(135deg, #e0fcff 0%, #fbe0ff 100%)',
      foreground: '#1a0036',
      glass: 'rgba(255,200,255,0.5)',
    },
    {
      name: 'Sunstone Spark',
      buttonBg: 'bg-gradient-to-r from-yellow-400 to-orange-400',
      buttonText: 'text-black',
      buttonHover: 'hover:from-yellow-500 hover:to-orange-500',
      buttonGlass: 'rgba(255,240,200,0.7)',
      buttonBorder: 'rgba(255,200,100,0.3)',
      inputBg: 'bg-yellow-50',
      inputText: 'text-orange-900',
      inputFocus: 'focus:ring-yellow-400',
      inputGlass: 'rgba(255,240,200,0.6)',
      inputBorder: 'rgba(255,200,100,0.3)',
      background: 'linear-gradient(135deg, #fffbe0 0%, #ffe0b2 100%)',
      foreground: '#7a3e00',
      glass: 'rgba(255,240,200,0.5)',
    },
    {
      name: 'Verdant Canopy',
      buttonBg: 'bg-gradient-to-r from-green-700 to-lime-500',
      buttonText: 'text-green-900',
      buttonHover: 'hover:from-green-800 hover:to-lime-600',
      buttonGlass: 'rgba(200,255,200,0.7)',
      buttonBorder: 'rgba(100,255,100,0.3)',
      inputBg: 'bg-lime-50',
      inputText: 'text-green-900',
      inputFocus: 'focus:ring-green-700',
      inputGlass: 'rgba(200,255,200,0.6)',
      inputBorder: 'rgba(100,255,100,0.3)',
      background: 'linear-gradient(135deg, #e0ffe0 0%, #d0f5c7 100%)',
      foreground: '#00361a',
      glass: 'rgba(200,255,200,0.5)',
    },
    {
      name: 'Deep Blue Sea',
      buttonBg: 'bg-gradient-to-r from-blue-700 to-cyan-400',
      buttonText: 'text-black',
      buttonHover: 'hover:from-blue-800 hover:to-cyan-500',
      buttonGlass: 'rgba(200,240,255,0.7)',
      buttonBorder: 'rgba(100,200,255,0.3)',
      inputBg: 'bg-cyan-50',
      inputText: 'text-blue-900',
      inputFocus: 'focus:ring-blue-700',
      inputGlass: 'rgba(200,240,255,0.6)',
      inputBorder: 'rgba(100,200,255,0.3)',
      background: 'linear-gradient(135deg, #e0f7ff 0%, #c7eaff 100%)',
      foreground: '#002d36',
      glass: 'rgba(200,240,255,0.5)',
    },
    {
      name: 'Vintage Sunset',
      buttonBg: 'bg-gradient-to-r from-orange-400 to-pink-400',
      buttonText: 'text-black',
      buttonHover: 'hover:from-orange-500 hover:to-pink-500',
      buttonGlass: 'rgba(255,220,180,0.7)',
      buttonBorder: 'rgba(255,150,100,0.3)',
      inputBg: 'bg-orange-50',
      inputText: 'text-pink-900',
      inputFocus: 'focus:ring-orange-400',
      inputGlass: 'rgba(255,220,180,0.6)',
      inputBorder: 'rgba(255,150,100,0.3)',
      background: 'linear-gradient(135deg, #fff0e0 0%, #ffe0f0 100%)',
      foreground: '#7a0036',
      glass: 'rgba(255,220,180,0.5)',
    },
    {
      name: 'Hacker Hues',
      buttonBg: 'bg-gradient-to-r from-black to-gray-800',
      buttonText: 'text-green-400',
      buttonHover: 'hover:from-gray-900 hover:to-black',
      buttonGlass: 'rgba(20,30,20,0.8)',
      buttonBorder: 'rgba(0,255,100,0.3)',
      inputBg: 'bg-black',
      inputText: 'text-green-400',
      inputFocus: 'focus:ring-green-400',
      inputGlass: 'rgba(20,30,20,0.7)',
      inputBorder: 'rgba(0,255,100,0.3)',
      background: 'linear-gradient(135deg, #181818 0%, #232323 100%)',
      foreground: '#00ff64',
      glass: 'rgba(20,30,20,0.5)',
    },
    {
      name: 'GrapeVine Galaxy',
      buttonBg: 'bg-gradient-to-r from-purple-700 to-indigo-500',
      buttonText: 'text-white',
      buttonHover: 'hover:from-purple-800 hover:to-indigo-600',
      buttonGlass: 'rgba(80,0,80,0.7)',
      buttonBorder: 'rgba(150,50,200,0.3)',
      inputBg: 'bg-indigo-900',
      inputText: 'text-purple-200',
      inputFocus: 'focus:ring-purple-600',
      inputGlass: 'rgba(80,0,80,0.6)',
      inputBorder: 'rgba(150,50,200,0.3)',
      background: 'linear-gradient(135deg, #2d0036 0%, #1a004f 100%)',
      foreground: '#fbeffb',
      glass: 'rgba(80,0,80,0.5)',
    },
    {
      name: 'Cerulean Sky',
      buttonBg: 'bg-gradient-to-r from-sky-400 to-blue-600',
      buttonText: 'text-blue-900',
      buttonHover: 'hover:from-sky-500 hover:to-blue-700',
      buttonGlass: 'rgba(180,220,255,0.7)',
      buttonBorder: 'rgba(100,150,255,0.3)',
      inputBg: 'bg-blue-100',
      inputText: 'text-blue-900',
      inputFocus: 'focus:ring-sky-500',
      inputGlass: 'rgba(180,220,255,0.6)',
      inputBorder: 'rgba(100,150,255,0.3)',
      background: 'linear-gradient(135deg, #e0f7ff 0%, #d0e0ff 100%)',
      foreground: '#002a4f',
      glass: 'rgba(180,220,255,0.5)',
    },
    {
      name: 'Canyon Sunset',
      buttonBg: 'bg-gradient-to-r from-yellow-600 to-red-500',
      buttonText: 'text-white',
      buttonHover: 'hover:from-yellow-700 hover:to-red-600',
      buttonGlass: 'rgba(255,200,150,0.7)',
      buttonBorder: 'rgba(255,100,50,0.3)',
      inputBg: 'bg-amber-50',
      inputText: 'text-red-800',
      inputFocus: 'focus:ring-yellow-600',
      inputGlass: 'rgba(255,200,150,0.6)',
      inputBorder: 'rgba(255,100,50,0.3)',
      background: 'linear-gradient(135deg, #fff8e1 0%, #ffe0c0 100%)',
      foreground: '#802a00',
      glass: 'rgba(255,200,150,0.5)',
    },
    {
      name: 'Cloud Whisper',
      buttonBg: 'bg-gradient-to-r from-gray-500 to-blue-300',
      buttonText: 'text-gray-900',
      buttonHover: 'hover:from-gray-600 hover:to-blue-400',
      buttonGlass: 'rgba(220,230,240,0.7)',
      buttonBorder: 'rgba(150,180,220,0.3)',
      inputBg: 'bg-gray-100',
      inputText: 'text-blue-800',
      inputFocus: 'focus:ring-gray-500',
      inputGlass: 'rgba(220,230,240,0.6)',
      inputBorder: 'rgba(150,180,220,0.3)',
      background: 'linear-gradient(135deg, #f0f4f7 0%, #e8f0f5 100%)',
      foreground: '#2a364f',
      glass: 'rgba(220,230,240,0.5)',
    },
    {
      name: 'Crimson Ember',
      buttonBg: 'bg-gradient-to-r from-red-700 to-pink-600',
      buttonText: 'text-red-900',
      buttonHover: 'hover:from-red-800 hover:to-pink-700',
      buttonGlass: 'rgba(255,180,180,0.7)',
      buttonBorder: 'rgba(255,50,50,0.3)',
      inputBg: 'bg-rose-50',
      inputText: 'text-red-900',
      inputFocus: 'focus:ring-red-700',
      inputGlass: 'rgba(255,180,180,0.6)',
      inputBorder: 'rgba(255,50,50,0.3)',
      background: 'linear-gradient(135deg, #fff0f0 0%, #ffe6e6 100%)',
      foreground: '#6a0000',
      glass: 'rgba(255,180,180,0.5)',
    },
    {
      name: 'Rainforest Canopy',
      buttonBg: 'bg-gradient-to-r from-emerald-600 to-teal-400',
      buttonText: 'text-teal-900',
      buttonHover: 'hover:from-emerald-700 hover:to-teal-500',
      buttonGlass: 'rgba(150,255,200,0.7)',
      buttonBorder: 'rgba(50,200,100,0.3)',
      inputBg: 'bg-emerald-50',
      inputText: 'text-teal-900',
      inputFocus: 'focus:ring-emerald-600',
      inputGlass: 'rgba(150,255,200,0.6)',
      inputBorder: 'rgba(50,200,100,0.3)',
      background: 'linear-gradient(135deg, #e0ffe0 0%, #c0fff0 100%)',
      foreground: '#004f2a',
      glass: 'rgba(150,255,200,0.5)',
    },
    {
      name: 'Cosmic Dust',
      buttonBg: 'bg-gradient-to-r from-gray-700 to-slate-500',
      buttonText: 'text-white',
      buttonHover: 'hover:from-gray-800 hover:to-slate-600',
      buttonGlass: 'rgba(80,80,90,0.7)',
      buttonBorder: 'rgba(150,150,160,0.3)',
      inputBg: 'bg-slate-900',
      inputText: 'text-gray-300',
      inputFocus: 'focus:ring-gray-600',
      inputGlass: 'rgba(80,80,90,0.6)',
      inputBorder: 'rgba(150,150,160,0.3)',
      background: 'linear-gradient(135deg, #2a2a2a 0%, #3a3a40 100%)',
      foreground: '#e0e0e0',
      glass: 'rgba(80,80,90,0.5)',
    },
    {
      name: 'Sugary Swirl',
      buttonBg: 'bg-gradient-to-r from-pink-300 to-blue-200',
      buttonText: 'text-purple-800',
      buttonHover: 'hover:from-pink-400 hover:to-blue-300',
      buttonGlass: 'rgba(255,230,240,0.7)',
      buttonBorder: 'rgba(200,180,255,0.3)',
      inputBg: 'bg-blue-50',
      inputText: 'text-pink-800',
      inputFocus: 'focus:ring-pink-300',
      inputGlass: 'rgba(255,230,240,0.6)',
      inputBorder: 'rgba(200,180,255,0.3)',
      background: 'linear-gradient(135deg, #fff0f5 0%, #e0f0ff 100%)',
      foreground: '#4f004a',
      glass: 'rgba(255,230,240,0.5)',
    },
    {
      name: 'Inkwell Night',
      buttonBg: 'bg-gradient-to-r from-black to-red-900',
      buttonText: 'text-red-300',
      buttonHover: 'hover:from-gray-900 hover:to-red-800',
      buttonGlass: 'rgba(10,0,0,0.7)',
      buttonBorder: 'rgba(150,0,0,0.3)',
      inputBg: 'bg-black',
      inputText: 'text-red-200',
      inputFocus: 'focus:ring-red-600',
      inputGlass: 'rgba(10,0,0,0.6)',
      inputBorder: 'rgba(150,0,0,0.3)',
      background: 'linear-gradient(135deg, #000000 0%, #1a0000 100%)',
      foreground: '#ff6666',
      glass: 'rgba(10,0,0,0.5)',
    },
    {
      name: 'Sunset Glimmer',
      buttonBg: 'bg-gradient-to-r from-amber-400 to-orange-500',
      buttonText: 'text-black',
      buttonHover: 'hover:from-amber-500 hover:to-orange-600',
      buttonGlass: 'rgba(255,230,190,0.7)',
      buttonBorder: 'rgba(255,180,100,0.3)',
      inputBg: 'bg-yellow-100',
      inputText: 'text-orange-900',
      inputFocus: 'focus:ring-amber-400',
      inputGlass: 'rgba(255,230,190,0.6)',
      inputBorder: 'rgba(255,180,100,0.3)',
      background: 'linear-gradient(135deg, #fff8e0 0%, #ffe6c2 100%)',
      foreground: '#804f00',
      glass: 'rgba(255,230,190,0.5)',
    },
    {
      name: 'Ocean Ripple',
      buttonBg: 'bg-gradient-to-r from-teal-400 to-blue-500',
      buttonText: 'text-teal-900',
      buttonHover: 'hover:from-teal-500 hover:to-blue-600',
      buttonGlass: 'rgba(150,220,255,0.7)',
      buttonBorder: 'rgba(100,200,255,0.3)',
      inputBg: 'bg-blue-50',
      inputText: 'text-teal-900',
      inputFocus: 'focus:ring-teal-400',
      inputGlass: 'rgba(150,220,255,0.6)',
      inputBorder: 'rgba(100,200,255,0.3)',
      background: 'linear-gradient(135deg, #e0f7ff 0%, #c2e6ff 100%)',
      foreground: '#004f5a',
      glass: 'rgba(150,220,255,0.5)',
    },
    {
      name: 'Amethyst Aura',
      buttonBg: 'bg-gradient-to-r from-purple-500 to-fuchsia-600',
      buttonText: 'text-purple-900',
      buttonHover: 'hover:from-purple-600 hover:to-fuchsia-700',
      buttonGlass: 'rgba(220,180,255,0.7)',
      buttonBorder: 'rgba(180,100,255,0.3)',
      inputBg: 'bg-fuchsia-50',
      inputText: 'text-purple-900',
      inputFocus: 'focus:ring-purple-500',
      inputGlass: 'rgba(220,180,255,0.6)',
      inputBorder: 'rgba(180,100,255,0.3)',
      background: 'linear-gradient(135deg, #f0e0ff 0%, #fbe0ff 100%)',
      foreground: '#4f005a',
      glass: 'rgba(220,180,255,0.5)',
    },
  ];

export const ThemeContext = createContext({
  theme: themes[0],
  setTheme: (name: string) => {},
  themes,
});

export function ThemeProvider({ children }: { children: ReactNode }) {
  const [themeName, setThemeName] = useState<string>(themes[0].name);
  const [mounted, setMounted] = useState(false);

  useEffect(() => {
    const stored = typeof window !== 'undefined' ? localStorage.getItem('theme') : null;
    if (stored) setThemeName(stored);
    setMounted(true);
  }, []);

  useEffect(() => {
    if (mounted) localStorage.setItem('theme', themeName);
  }, [themeName, mounted]);

  const theme = themes.find(t => t.name === themeName) || themes[0];

  if (!mounted) {
    return null;
  }

  return (
    <ThemeContext.Provider value={{ theme, setTheme: setThemeName, themes }}>
      {children}
    </ThemeContext.Provider>
  );
}

export function useTheme() {
  return useContext(ThemeContext);
} 